// Code generated by protoc-gen-go.
// source: tensorflow/core/framework/function.proto
// DO NOT EDIT!

package tensorflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// A library is a set of named functions.
type FunctionDefLibrary struct {
	Function []*FunctionDef `protobuf:"bytes,1,rep,name=function" json:"function,omitempty"`
}

func (m *FunctionDefLibrary) Reset()                    { *m = FunctionDefLibrary{} }
func (m *FunctionDefLibrary) String() string            { return proto.CompactTextString(m) }
func (*FunctionDefLibrary) ProtoMessage()               {}
func (*FunctionDefLibrary) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *FunctionDefLibrary) GetFunction() []*FunctionDef {
	if m != nil {
		return m.Function
	}
	return nil
}

// A function can be instantiated when the runtime can bind every attr
// with a value. When a GraphDef has a call to a function, it must
// have binding for every attr defined in the signature.
//
// TODO(zhifengc):
//   * device spec, etc.
type FunctionDef struct {
	// The definition of the function's name, arguments, return values,
	// attrs etc.
	Signature *OpDef `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	// The body of the function.
	Node []*FunctionDef_Node `protobuf:"bytes,2,rep,name=node" json:"node,omitempty"`
}

func (m *FunctionDef) Reset()                    { *m = FunctionDef{} }
func (m *FunctionDef) String() string            { return proto.CompactTextString(m) }
func (*FunctionDef) ProtoMessage()               {}
func (*FunctionDef) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *FunctionDef) GetSignature() *OpDef {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *FunctionDef) GetNode() []*FunctionDef_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

// A node is a multi-value assignment:
//   (ret[0], ret[1], ...) = func(arg[0], arg[1], ...)
//
// By convention, "func" is resolved by consulting with a user-defined
// library first. If not resolved, "func" is assumed to be a builtin op.
type FunctionDef_Node struct {
	// This node produces multiple outputs. They are named ret[0],
	// ret[1], ..., etc.
	//
	// REQUIRES: function.node.ret[*] are unique across all nodes.
	// REQUIRES: ret.size == func/op def's number of output args.
	Ret []string `protobuf:"bytes,1,rep,name=ret" json:"ret,omitempty"`
	// The op/function name.
	Op string `protobuf:"bytes,2,opt,name=op" json:"op,omitempty"`
	// Arguments passed to this func/op.
	//
	// arg[i] must be either one of
	// function.signature.input_args[*].name or one of
	// function.node[*].ret[*].
	//
	// REQUIRES: arg.size == func/op def's number of input args.
	Arg []string `protobuf:"bytes,3,rep,name=arg" json:"arg,omitempty"`
	// Control dependencies.
	//
	// dep[i] must be one of function.node[*].ret[*] or one of
	// function.signature.input_args[*].name.
	Dep []string `protobuf:"bytes,4,rep,name=dep" json:"dep,omitempty"`
	// Attrs.
	//
	// 'attr' maps names defined by 'func's attr defs to attr values.
	// attr values may have placeholders which are substituted
	// recursively by concrete values when this node is instantiated.
	// These placeholdes must name an attr listed in the FunctionDef's
	// signature.
	Attr map[string]*AttrValue `protobuf:"bytes,5,rep,name=attr" json:"attr,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *FunctionDef_Node) Reset()                    { *m = FunctionDef_Node{} }
func (m *FunctionDef_Node) String() string            { return proto.CompactTextString(m) }
func (*FunctionDef_Node) ProtoMessage()               {}
func (*FunctionDef_Node) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1, 0} }

func (m *FunctionDef_Node) GetAttr() map[string]*AttrValue {
	if m != nil {
		return m.Attr
	}
	return nil
}

func init() {
	proto.RegisterType((*FunctionDefLibrary)(nil), "tensorflow.FunctionDefLibrary")
	proto.RegisterType((*FunctionDef)(nil), "tensorflow.FunctionDef")
	proto.RegisterType((*FunctionDef_Node)(nil), "tensorflow.FunctionDef.Node")
}

var fileDescriptor4 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xc9, 0x9f, 0x8a, 0x99, 0x9c, 0x5c, 0x10, 0x43, 0xf0, 0x20, 0x45, 0x4a, 0xed, 0x21,
	0x81, 0xea, 0x41, 0xbc, 0x88, 0xa2, 0x9e, 0x44, 0x6f, 0x5e, 0xcb, 0xb6, 0x99, 0x94, 0xd0, 0xba,
	0x13, 0xa6, 0x1b, 0x4b, 0x3e, 0x88, 0x9f, 0xc4, 0x2f, 0xe8, 0xee, 0x56, 0x6d, 0x2e, 0xf1, 0xb6,
	0x8f, 0x79, 0xbf, 0xf7, 0x76, 0x06, 0xc6, 0x1a, 0xd5, 0x86, 0xb8, 0x5c, 0xd3, 0x36, 0x5f, 0x10,
	0x63, 0x5e, 0xb2, 0x7c, 0xc7, 0x2d, 0xf1, 0x2a, 0x2f, 0x1b, 0xb5, 0xd0, 0x15, 0xa9, 0xac, 0x66,
	0xd2, 0x24, 0x60, 0xef, 0x4c, 0x27, 0xfd, 0x94, 0xd4, 0x9a, 0x67, 0x1f, 0x72, 0xdd, 0xe0, 0x8e,
	0x4b, 0x47, 0xfd, 0x5e, 0xaa, 0x67, 0x05, 0x96, 0x3b, 0xdf, 0xf0, 0x16, 0xc4, 0xd3, 0x4f, 0xe3,
	0x03, 0x96, 0xcf, 0xd5, 0x9c, 0x25, 0xb7, 0xe2, 0x02, 0x0e, 0x7f, 0xff, 0x91, 0x78, 0x67, 0xc1,
	0x38, 0x9e, 0x9e, 0x64, 0xfb, 0xc0, 0xac, 0x43, 0x0c, 0x3f, 0x7d, 0x88, 0x3b, 0x5a, 0x9c, 0x43,
	0xb4, 0xa9, 0x96, 0x4a, 0xea, 0x86, 0xd1, 0xb0, 0x9e, 0x61, 0x8f, 0xba, 0xec, 0x6b, 0x6d, 0x5d,
	0x13, 0x08, 0x15, 0x15, 0x98, 0xf8, 0x2e, 0xfc, 0xb4, 0x27, 0x3c, 0x7b, 0x31, 0x9e, 0xf4, 0xcb,
	0x83, 0xd0, 0x3e, 0x44, 0x0c, 0x01, 0xa3, 0x76, 0x1f, 0x8a, 0x04, 0x80, 0x4f, 0xb5, 0xe1, 0x3d,
	0xf3, 0x36, 0x03, 0xc9, 0xcb, 0x24, 0x70, 0x03, 0x23, 0x0a, 0xac, 0x93, 0xd0, 0x89, 0x2b, 0x08,
	0xed, 0x69, 0x92, 0x81, 0xeb, 0x19, 0xfd, 0xd7, 0x93, 0xdd, 0x19, 0xe3, 0xa3, 0xd2, 0xdc, 0xa6,
	0xf7, 0x10, 0xfd, 0x09, 0x9b, 0xb7, 0xc2, 0xd6, 0xad, 0x12, 0x99, 0xed, 0x06, 0xee, 0xca, 0xae,
	0x38, 0x9e, 0x1e, 0x77, 0x03, 0x2d, 0xf2, 0x66, 0x87, 0x37, 0xfe, 0xb5, 0x37, 0x3f, 0x70, 0xf7,
	0xbd, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x17, 0x79, 0xb9, 0xeb, 0x01, 0x00, 0x00,
}
